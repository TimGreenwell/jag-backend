version: '3.9'

services:
  server:
    env_file:
      - .env
    hostname: server2
    container_name: server1
    build:
      context: ..
      dockerfile: docker/node/Dockerfile
    ports:
      - '8888:8888'
    depends_on:
      - db
    links:
      - 'db:boops'
    networks:
      - "net"

  db:
    container_name: JAG-postgres
    image: 'postgres:15.1-alpine3.17'
    ports:
      - '5432:5432'
    restart: unless-stopped
    environment:
      NGINX_PROXY_CONTAINER: "reverse-proxy"
      POSTGRES_DB: 'teamworks'
      POSTGRES_USER: 'teamworks'
      POSTGRES_PASSWORD: 'teamworks'
    volumes:
      - ../sql/postgres/db/create_tables.sql:/docker-entrypoint-initdb.d/10_create_tables.sql
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    networks:
      - "net"

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${COMPOSE_PROJECT_NAME}-pgadmin4
    ports:
      - "5050:80"
    environment:
      NGINX_PROXY_CONTAINER: "reverse-proxy"
      PGADMIN_DEFAULT_EMAIL: admin@ihmc.moc
      PGADMIN_DEFAULT_PASSWORD: abc123
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 40
      GUNICORN_ACCESS_LOGFILE: '/var/lib/pgadmin/access.log'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"
    logging:
      driver: none
    depends_on:
      - db
    networks:
      - "net"

#  auth:
#    image: jboss/keycloak
#    container_name: ${COMPOSE_PROJECT_NAME}-keycloak
#    restart: unless-stopped
#    depends_on:
#      - db
#    ports:
#      - "8080:8080"
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      DB_VENDOR: postgres
#      DB_ADDR: db
#      DB_DATABASE: teamworks
#      DB_USER: teamworks
#      DB_PASSWORD: teamworks
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: abc123

#      VIRTUAL_HOST: ${VIRTUAL_HOST}
#      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
#      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
#      VIRTUAL_PORT: "8080"
#      HTTPS_METHOD: redirect
#      PROXY_ADDRESS_FORWARDING: "true" # <==== very important if you use reverse proxy


  reverse-proxy:
    image: nginx:latest
    restart: unless-stopped
    container_name: reverse-proxy
    ports:
      - "8082:8082"
    depends_on:
      - server
      - pgadmin
    links:
      - 'server:poops'
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf
      - "html:/usr/share/nginx/html"
      - "dhparam:/etc/nginx/dhparam"
      - "vhost:/etc/nginx/vhost.d"
      - "certs:/etc/nginx/certs"
      - "/run/docker.sock:/tmp/docker.sock:ro"
#    network_mode: host
    networks:
      - "net"

#  letsencrypt:
#    image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
#    container_name: "letsencrypt-helper"
#    volumes:
#      - "html:/usr/share/nginx/html"
#      - "dhparam:/etc/nginx/dhparam"
#      - "vhost:/etc/nginx/vhost.d"
#      - "certs:/etc/nginx/certs"
#      - "/run/docker.sock:/var/run/docker.sock:ro"
#    environment:
#      NGINX_PROXY_CONTAINER: "reverse-proxy"
#      DEFAULT_EMAIL: "tim@greenwell.de"
#    restart: "always"
#    depends_on:
#      - "reverse-proxy"
#    networks:
#      - "net"

volumes:
  pgdata:
  pgconf:
  pglog:
  pgadmin-data:
  html:
  dhparam:
  vhost:
  certs:

networks:
  net:
    external: true

